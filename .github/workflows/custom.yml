name: Build Wheel

on:
  workflow_dispatch: {}

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@63069e3931dedbf3b63792097479563182fe70d1 # v1.2.18
      with:
        key: linux
        create-symlink: true
          
    - name: Install dependencies
      run: |
        sudo apt-get update
        #sudo apt-get upgrade -y
        sudo apt-get install -y opencl-headers clinfo
        sudo apt-get install -y ocl-icd-opencl-dev
        sudo apt-get install -y intel-opencl-icd intel-compute-runtime
    
    - name: Verify OpenCL installation
      run: clinfo

    - name: Install pytorch
      run: |
        python3 -m venv .venv
        source .venv/bin/activate
        python3 -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        echo "Python3 Path = $(which python3)"
        echo "Site(s) = $(python3 -m site)"
        
    - name: Build
      env:
        #CC: clang
        #CXX: clang++
        USE_CCACHE: 1
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        export CCACHE_SLOPPINESS=time_macros,clang_index_store,ivfsoverlay,include_file_ctime,include_file_mtime,modules,system_headers,pch_defines
        export CCACHE_FILECLONE=true
        export CCACHE_DEPEND=true
        export CCACHE_COMPILERCHECK=content
        
        source .venv/bin/activate
        SITE_PATH=$(find . -name "site-packages" -print -quit 2>/dev/null)
        echo "SITE_PATH = $SITE_PATH"
        echo "VIRTUAL_ENV = $VIRTUAL_ENV"
        
        mkdir build
        cd build
        cmake -DCMAKE_PREFIX_PATH=$SITE_PATH/torch/share/cmake/Torch -DCMAKE_INSTALL_PREFIX=$HOME/.local ..
        make
        #make install
        ls -l
        ls -l pytorch_ocl
        ldd pytorch_ocl/pt_ocl.so
        
    - name: Package build
      run: |
        #find . -name "*.whl"
        mkdir -p artifacts
        cp -aR build/pytorch_ocl artifacts/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux build
        path: artifacts/
          
    - name: Test
      run: |
        source .venv/bin/activate
        cd build
        make install
        cd -
        
        export PYTHONPATH=build
        python mnist.py --device ocl:0
